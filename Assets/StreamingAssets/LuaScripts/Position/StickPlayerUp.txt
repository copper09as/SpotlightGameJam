local DM = CS.DetectionManager

function StickPlayerUp(entity)
    local tag = "Player"
    local data = entity.dataTable
    local hitEntityTrans = entity.transform
    local hitEntityPos = hitEntityTrans.position
    local colBounds = entity.col.bounds
    local halfWidth = colBounds.extents.x
    local halfHeight = colBounds.extents.y
    local raysCount = 12
    local step = (halfWidth * 2) / (raysCount - 1)
    local hitCharacter = nil

    -- 🌿 射线检测玩家（上方向）
    for i = 0, raysCount - 1 do
        local offsetX = -halfWidth + i * step
        local origin = CS.UnityEngine.Vector2(
            hitEntityPos.x + offsetX,
            hitEntityPos.y + halfHeight + 0.02
        )

        local character = DM.Raycast2DByTag(origin, CS.UnityEngine.Vector2(0, 1), 0.3, tag)

        CS.UnityEngine.Debug.DrawRay(
            CS.UnityEngine.Vector3(origin.x, origin.y, 0),
            CS.UnityEngine.Vector3(0, 0.2, 0),
            CS.UnityEngine.Color.green
        )

        if character then
            hitCharacter = character
            break
        end
    end

    -- 📌 检测到角色
    if hitCharacter then
        data.hitCharacter = hitCharacter
        local rb = hitCharacter:GetComponent(typeof(CS.UnityEngine.Rigidbody2D))

        if rb then
            -- 🚀 不改 gravityScale，只直接下拉 Y 速度
            -- （避免影响全局重力，行为更可控）
            if rb.velocity.y > -10 then   -- 下落上限
                rb.velocity = CS.UnityEngine.Vector2(rb.velocity.x, -10)
            end
        end

        -- ✨ X 方向吸附
        if not data.hitLocalPosition then
            data.hitLocalPosition = hitEntityTrans:InverseTransformPoint(hitCharacter.transform.position)
        end

        local currentLocalPos = hitEntityTrans:InverseTransformPoint(hitCharacter.transform.position)
        local targetX = data.hitLocalPosition.x
        local targetWorldX = hitEntityTrans:TransformPoint(
            CS.UnityEngine.Vector3(targetX, currentLocalPos.y, 0)
        ).x
        local currentY = hitCharacter.transform.position.y

        hitCharacter.transform.position = CS.UnityEngine.Vector3.Lerp(
            hitCharacter.transform.position,
            CS.UnityEngine.Vector3(targetWorldX, currentY, hitCharacter.transform.position.z),
            0.25
        )

        return
    end

    -- ❌ 离开滑块时，清空记录
    data.hitCharacter = nil
    data.hitLocalPosition = nil
end
