local GC = CS.GameController

-- 缩放速率设置
local scaleDelta = 0.05
local minCharacterScale = 0.1
local maxCharacterScale = 1.0

-- 摄像机缩放范围
local maxSize = 4.71
local minSize = 1


function ScrollCameraSize(entity)
    local dt = CS.UnityEngine.Time.deltaTime
    local data = entity.dataTable
    local mousePos = GC.GetScreenPos()

    -- 限制鼠标 Y 坐标
    mousePos.y = CS.UnityEngine.Mathf.Clamp(mousePos.y, data.limitYMin, data.limitYMax)

    -- 转换成世界坐标
    local cam = CS.UnityEngine.Camera.main
    local worldPos = cam:ScreenToWorldPoint(mousePos)

    -- 平滑移动 Y 位置
    local pos = entity.transform.position
    local targetY = worldPos.y
    local followSpeed = data.scrollSpeed
    pos.y = CS.UnityEngine.Mathf.Lerp(pos.y, targetY, followSpeed * dt)

    -- 最终 Clamp 防止超限
    local clampedScreenY = CS.UnityEngine.Mathf.Clamp(cam:WorldToScreenPoint(pos).y, data.limitYMin, data.limitYMax)
    local finalWorldPos = cam:ScreenToWorldPoint(CS.UnityEngine.Vector3(mousePos.x, clampedScreenY, mousePos.z))
    pos.y = finalWorldPos.y
    entity.transform.position = pos

    -- 计算滚动比例
    local rangeY = data.limitYMax - data.limitYMin
    local targetProgress = (mousePos.y - data.limitYMin) / rangeY
    local smoothFactor = data.scrollSmooth or 5
    local oldProgress = data.scrollProgress or 0
    data.scrollProgress = CS.UnityEngine.Mathf.Lerp(oldProgress, targetProgress, smoothFactor * dt)

    local t = data.scrollProgress
    if t < 0 then t = 0 end
    if t > 1 then t = 1 end

    -- 摄像机缩放
    cam.orthographicSize = maxSize - (maxSize - minSize) * t

    -- 角色缩放持续叠加
-- 角色缩放持续叠加
	--[[if data.hitCharacter ~= nil then
		local target = data.hitCharacter.transform
		local curScale = target.localScale.x

		-- 翻转缩放方向
		local deltaProgress = oldProgress - data.scrollProgress
		local newScale = curScale + deltaProgress * scaleDelta * 10

		-- 限制范围
		newScale = CS.UnityEngine.Mathf.Clamp(newScale, minCharacterScale, maxCharacterScale)
		target.localScale = CS.UnityEngine.Vector3(newScale, newScale, newScale)
	end]]

end
